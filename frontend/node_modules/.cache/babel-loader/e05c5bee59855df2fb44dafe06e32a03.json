{"ast":null,"code":"import { GET_CART_LOADING, GET_CART_SUCCESS, GET_CART_FAILURE } from \"../Actions/Types\";\nimport { ADD_TO_CART_LOADING, ADD_TO_CART_SUCCESS, ADD_TO_CART_FAILURE } from \"../Actions/Types\";\nimport { CLEAN_AUTH, CLEAN_CART } from \"../Actions/Types\";\n\nconst Cart = (state, action) => {\n  if (typeof state === \"undefined\") {\n    return {\n      loading: false,\n      cart_data: [],\n      cart_error: {},\n      add_data: [],\n      add_error: {}\n    };\n  }\n\n  switch (action.type) {\n    case CLEAN_AUTH:\n      return {\n        loading: false,\n        cart_data: [],\n        cart_error: {},\n        add_data: [],\n        add_error: {}\n      };\n\n    case CLEAN_CART:\n      return { ...state,\n        loading: false,\n        add_data: [],\n        add_error: {}\n      };\n\n    case GET_CART_LOADING:\n      return { ...state,\n        loading: true,\n        cart_data: [],\n        cart_error: {}\n      };\n\n    case GET_CART_SUCCESS:\n      return { ...state,\n        loading: false,\n        cart_data: action.data,\n        cart_error: {}\n      };\n\n    case GET_CART_FAILURE:\n      return { ...state,\n        loading: false,\n        cart_data: [],\n        cart_error: action.err\n      };\n\n    case ADD_TO_CART_LOADING:\n      return { ...state,\n        loading: true,\n        add_data: [],\n        add_error: {}\n      };\n\n    case ADD_TO_CART_SUCCESS:\n      return { ...state,\n        loading: false,\n        add_data: action.data,\n        add_error: {}\n      };\n\n    case ADD_TO_CART_FAILURE:\n      return { ...state,\n        loading: false,\n        add_data: [],\n        add_error: action.err\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["GET_CART_LOADING","GET_CART_SUCCESS","GET_CART_FAILURE","ADD_TO_CART_LOADING","ADD_TO_CART_SUCCESS","ADD_TO_CART_FAILURE","CLEAN_AUTH","CLEAN_CART","Cart","state","action","loading","cart_data","cart_error","add_data","add_error","type","data","err"],"sources":["D:/Grocify/frontend/src/Reducers/CartReducer.js"],"sourcesContent":["import { GET_CART_LOADING, GET_CART_SUCCESS, GET_CART_FAILURE } from \"../Actions/Types\"\r\nimport { ADD_TO_CART_LOADING, ADD_TO_CART_SUCCESS, ADD_TO_CART_FAILURE } from \"../Actions/Types\"\r\nimport { CLEAN_AUTH, CLEAN_CART } from \"../Actions/Types\"\r\n\r\nconst Cart = (state, action) => {\r\n    if (typeof (state) === \"undefined\") {\r\n        return {\r\n            loading: false,\r\n            cart_data: [],\r\n            cart_error: {},\r\n            add_data: [],\r\n            add_error: {}\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case CLEAN_AUTH:\r\n            return {\r\n                loading: false,\r\n            cart_data: [],\r\n            cart_error: {},\r\n            add_data: [],\r\n            add_error: {}\r\n            }\r\n        case CLEAN_CART:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                add_data: [],\r\n                add_error: {}\r\n            }\r\n\r\n        case GET_CART_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                cart_data: [],\r\n                cart_error: {}\r\n            }\r\n        case GET_CART_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                cart_data: action.data,\r\n                cart_error: {}\r\n            }\r\n        case GET_CART_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                cart_data: [],\r\n                cart_error: action.err\r\n            }\r\n        case ADD_TO_CART_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                add_data: [],\r\n                add_error: {}\r\n            }\r\n        case ADD_TO_CART_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                add_data: action.data,\r\n                add_error: {}\r\n            }\r\n        case ADD_TO_CART_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                add_data: [],\r\n                add_error: action.err\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nexport default Cart"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,QAAqE,kBAArE;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,mBAAnD,QAA8E,kBAA9E;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,kBAAvC;;AAEA,MAAMC,IAAI,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC5B,IAAI,OAAQD,KAAR,KAAmB,WAAvB,EAAoC;IAChC,OAAO;MACHE,OAAO,EAAE,KADN;MAEHC,SAAS,EAAE,EAFR;MAGHC,UAAU,EAAE,EAHT;MAIHC,QAAQ,EAAE,EAJP;MAKHC,SAAS,EAAE;IALR,CAAP;EAOH;;EAED,QAAQL,MAAM,CAACM,IAAf;IACI,KAAKV,UAAL;MACI,OAAO;QACHK,OAAO,EAAE,KADN;QAEPC,SAAS,EAAE,EAFJ;QAGPC,UAAU,EAAE,EAHL;QAIPC,QAAQ,EAAE,EAJH;QAKPC,SAAS,EAAE;MALJ,CAAP;;IAOJ,KAAKR,UAAL;MACI,OAAO,EACH,GAAGE,KADA;QAEHE,OAAO,EAAE,KAFN;QAGHG,QAAQ,EAAE,EAHP;QAIHC,SAAS,EAAE;MAJR,CAAP;;IAOJ,KAAKf,gBAAL;MACI,OAAO,EACH,GAAGS,KADA;QAEHE,OAAO,EAAE,IAFN;QAGHC,SAAS,EAAE,EAHR;QAIHC,UAAU,EAAE;MAJT,CAAP;;IAMJ,KAAKZ,gBAAL;MACI,OAAO,EACH,GAAGQ,KADA;QAEHE,OAAO,EAAE,KAFN;QAGHC,SAAS,EAAEF,MAAM,CAACO,IAHf;QAIHJ,UAAU,EAAE;MAJT,CAAP;;IAMJ,KAAKX,gBAAL;MACI,OAAO,EACH,GAAGO,KADA;QAEHE,OAAO,EAAE,KAFN;QAGHC,SAAS,EAAE,EAHR;QAIHC,UAAU,EAAEH,MAAM,CAACQ;MAJhB,CAAP;;IAMJ,KAAKf,mBAAL;MACI,OAAO,EACH,GAAGM,KADA;QAEHE,OAAO,EAAE,IAFN;QAGHG,QAAQ,EAAE,EAHP;QAIHC,SAAS,EAAE;MAJR,CAAP;;IAMJ,KAAKX,mBAAL;MACI,OAAO,EACH,GAAGK,KADA;QAEHE,OAAO,EAAE,KAFN;QAGHG,QAAQ,EAAEJ,MAAM,CAACO,IAHd;QAIHF,SAAS,EAAE;MAJR,CAAP;;IAMJ,KAAKV,mBAAL;MACI,OAAO,EACH,GAAGI,KADA;QAEHE,OAAO,EAAE,KAFN;QAGHG,QAAQ,EAAE,EAHP;QAIHC,SAAS,EAAEL,MAAM,CAACQ;MAJf,CAAP;;IAMJ;MACI,OAAO,EACH,GAAGT;MADA,CAAP;EA5DR;AAgEH,CA3ED;;KAAMD,I;AA6EN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}